Опишем синтаксис языка программирования
E
X
:
f
u
n
c
f
(
)
{
…
}
 — объявление функции
f
 (в скобочках — тело).
m
a
y
b
e
t
h
r
o
w
E
x
c
1
 — команда, которая может выбросить исключение вида
E
x
c
1
, а может и не выбросить.
t
r
y
{
…
}
s
u
p
p
r
e
s
s
E
x
c
1
 — если внутри этого блока происходит исключение вида
E
x
c
1
, то оно подавляется.
f
(
)
 — вызов функции
f
.
В языке
E
X
 все инструкции, кроме объявлений функций, могут находиться только в теле какой-либо функции. Функции нельзя объявлять внутри других функций. Функцию можно вызывать до её определения, а также в её собственном теле. Имена функций и исключений в языке
E
X
 должны подходить под регулярное выражение
[
a
−
z
A
−
Z
0
−
9
_
]
+
, быть уникальными и не совпадать с ключевыми словами [
f
u
n
c
,
t
r
y
,
s
u
p
p
r
e
s
s
,
m
a
y
b
e
t
h
r
o
w
]. Текст программы может содержать произвольное количество пробелов и пустых срок.
На вход подаётся программа на языке
E
X
. Также на вход программе подаётся
q
 запросов. Каждый запрос — это одно число
l
 — номер строчки в программе. Необходимо для каждого запроса вывести все исключения, которые могут вылететь в выделенной строчке программы.
Формат ввода

В первой строке входных данных находится единственное число  —
q
 (
1
≤
q
≤
1
0
3
), количество запросов. Далее следует
q
 чисел по одному в строке — номера строк в запросах. Гарантируется, что все номера строк корректны. В следующей строке входных данных находится единственное число  —
n
, количество объявлений функций в коде. В последующих строках находится текст программы на языке
E
X
.
Гарантируется, что каждая строка программы подходит под одно из описаний ниже:
Пустая строка.
f
u
n
c
f
(
)
{
 — объявление функции
f
.
}
 — конец тела функции.
m
a
y
b
e
t
h
r
o
w
E
x
c
1
.
t
r
y
{
 — начало блока подавления исключений.
}
s
u
p
r
e
s
s
 — конец блока подавления исключений.
f
(
)
 — вызов функции
f
.
Количество вызовов функций в коде не превосходит
1
0
3
.
Количество видов исключений в коде не превосходит
1
0
3
.
Количество символов в коде не превосходит
1
0
6
.
Формат вывода

Для каждого запроса выведите строку, содержащую имена всех исключений, которые являются ответами на запрос, разделённые пробелами.
Пример

Ввод	Вывод
5
14
1
7
14
4
2
func func1() {
maybethrow exc1
try {
maybethrow exc2
maybethrow exc3

} suppress exc1, exc2, exc3
maybethrow exc4

}

func main() {
try {
func1()
} suppress exc1
}
exc1 exc4


exc1 exc4
exc2
