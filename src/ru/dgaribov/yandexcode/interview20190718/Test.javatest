package ru.dgaribov.yandexcode.interview20190718;

import java.util.ArrayList;
import java.util.List;



// Даны данные о въездах и выездах постояльцев в гостиницу.
// Определить максимальное количество постояльцев одновременно находящихся в гостинице.
public class Test {
    assert(maxGuests({{1, 5}, {0, 1}, {4, 5}}) == 2);
assert(maxGuests({{1, 2}, {2, 3}}) == 1);
assert(maxGuests({{1, 2}}) == 1);
assert(maxGuests({}) == 0);

    {1, 0, 4} - въезды
    {5, 1, 5} - выезды
// Add



    List<Integer> checkIns = new ArrayList<>();
    List<Integer> checkOuts = new ArrayList<>();

    public void addGuest(int dayIn, int dayOut) {
        checkIns.add(dayIn);
        checkOuts.add(dayOut);
    }


    {0, 0, 0, 1, 3}
    {2, 3, 5, 6, 6}


    int findBiggestGuestAmount() {
        checkIns.sort();
        checkOuts.sort();


        int max = 0;
        int current = 0;
        int start = 0;
        int end = 0;

        while (start < checkIns.size()) {
            if (checkIns(start) < checkOuts(end)) {
                current++;
                start++;
                max = Math.max(max, current);
            } else {
                current--;
                end++;
            }
        }
    }


// Remove

    {}


    // отсортировать массивы въездов и выездов. Используя while двигать два указателя, попутно обновляя счетчики.
    // Если текущий элемент въезда меньше соответствующего выезда, значит увеличиваем количество постояльцев
    // и двигаем указатель для выездов вперед. И наоборот,
}
